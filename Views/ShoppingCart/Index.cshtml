@model FigureShop.Models.ShoppingCart


<div class="container py-5">
    <h2 class="text-center mb-4"><i class="fas fa-shopping-cart"></i> Gi·ªè h√†ng c·ªßa b·∫°n</h2>

    @if (Model.Items.Count == 0)
    {
        <div class="alert alert-info text-center">üõí Gi·ªè h√†ng tr·ªëng</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle shadow-sm">
                <thead class="table-light text-center">
                    <tr>
                        <th style="width:48px;" class="text-center">
                            <input type="checkbox" id="selectAll" onclick="toggleAllCheckboxes(this)" title="Ch·ªçn t·∫•t c·∫£" />
                        </th>
                        <th style="min-width: 280px;">S·∫£n ph·∫©m</th>
                        <th style="width: 120px;">S·ªë l∆∞·ª£ng</th>
                        <th>ƒê∆°n gi√°</th>
                        <th>Th√†nh ti·ªÅn</th>
                        <th>Thao t√°c</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" name="selectedItems" value="@item.Id" class="item-checkbox" />
                            </td>
                            <td>
                                <div class="d-flex align-items-center gap-3">
                                    <img src="@item.Product?.ImagePath" alt="@item.Product?.Name"
                                         class="img-thumbnail" style="width: 60px; height: 60px; object-fit: contain;" />
                                    <div>
                                        <strong>@item.Product?.Name</strong><br />
                                        <small class="text-muted">@item.Product?.Category?.Name</small>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <input type="number" value="@item.Quantity" min="1" max="@item.Product?.Stock"
                                       onchange="updateQuantity(@item.Id, this.value)"
                                       class="form-control form-control-sm text-center" />
                            </td>
                            <td class="text-end">
                                @if (item.Product != null && item.Price < item.Product.Price)
                                {
                                    <div>
                                        <span class="text-muted text-decoration-line-through">
                                            @item.Product.Price.ToString("N0") ‚Ç´
                                        </span><br />
                                        <span class="text-danger fw-bold">@item.Price.ToString("N0") ‚Ç´</span>
                                    </div>
                                }
                                else
                                {
                                    <span class="fw-bold">@item.Price.ToString("N0") ‚Ç´</span>
                                }
                            </td>
                            <td class="text-end" id="itemTotal_@item.Id">
                                @((item.Quantity * item.Price).ToString("N0")) ‚Ç´
                            </td>
                            <td class="text-center">
                                <form asp-action="RemoveItem" method="post">
                                    <input type="hidden" name="itemId" value="@item.Id" />
                                    <button type="submit" class="btn btn-sm btn-danger">
                                        <i class="fas fa-trash-alt"></i> Xo√°
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mt-4 gap-3">
            <h4 class="text-danger fw-bold mb-0">
                T·ªïng c·ªông: <span id="totalAmount">0 ‚Ç´</span>
            </h4>
            <form action="@Url.Action("Checkout", "Order")" method="get" id="checkoutForm">
                <input type="hidden" name="selectedItemIds" id="selectedItemIds" />
                <button type="submit" class="btn btn-success btn-lg" @(Model.Items.Count == 0 ? "disabled" : "")>
                    Thanh to√°n
                </button>
            </form>
        </div>

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success mt-3">@ViewBag.Message</div>
        }
    }
</div>

@section Scripts {
<script>
    // Gi·ªõi h·∫°n s·ªë l∆∞·ª£ng kh√¥ng v∆∞·ª£t qu√° stock
    document.querySelectorAll('input[type="number"]').forEach(function(input) {
        input.addEventListener('input', function() {
            var max = parseInt(input.getAttribute('max'));
            var val = parseInt(input.value);
            if (val > max) {
                input.value = max;
            }
            if (val < 1 || isNaN(val)) {
                input.value = 1;
            }
        });
    });
    // Khi v√†o trang, t·ªïng c·ªông m·∫∑c ƒë·ªãnh l√† 0
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('totalAmount').innerText = '0 ‚Ç´';
    });
    function updateQuantity(itemId, quantity) {
        fetch('/ShoppingCart/UpdateQuantityAjax', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({ itemId: itemId, quantity: quantity })
        })
        .then(response => response.json())
        .then(data => {
            document.getElementById('totalAmount').innerText = data.totalAmount + " ‚Ç´";
            document.getElementById('itemTotal_' + itemId).innerText = data.itemTotal + " ‚Ç´";
            updateSelectedTotal();
        });
    }

    // Checkbox logic
    function toggleAllCheckboxes(source) {
        document.querySelectorAll('.item-checkbox').forEach(function(cb) {
            cb.checked = source.checked;
        });
        updateSelectedTotal();
    }
    document.querySelectorAll('.item-checkbox').forEach(function(cb) {
        cb.addEventListener('change', updateSelectedTotal);
    });

    function updateSelectedTotal() {
        var total = 0;
        document.querySelectorAll('.item-checkbox:checked').forEach(function(cb) {
            var row = cb.closest('tr');
            var priceCell = row.querySelector('td[id^="itemTotal_"]');
            if (priceCell) {
                var value = priceCell.innerText.replace(/[^\d]/g, '');
                total += parseInt(value || '0');
            }
        });
        document.getElementById('totalAmount').innerText = (total > 0 ? total.toLocaleString() : '0') + " ‚Ç´";
    }

    document.getElementById('checkoutForm').addEventListener('submit', function(e) {
        var selected = Array.from(document.querySelectorAll('.item-checkbox:checked')).map(cb => cb.value);
        if (selected.length === 0) {
            alert('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ thanh to√°n!');
            e.preventDefault();
            return;
        }
        // Chuy·ªÉn selectedItemIds sang query string
        var url = this.action + '?selectedItemIds=' + encodeURIComponent(selected.join(','));
        window.location.href = url;
        e.preventDefault();
    });
</script>
}
